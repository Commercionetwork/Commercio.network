syntax = "proto3";
package commercionetwork.vbr;

// Options section
option go_package = "github.com/commercionetwork/commercionetwork/x/vbr/types";

// Import section
import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "commercionetwork/vbr/params.proto";

// Query defines the gRPC querier service.
service Query {
    rpc GetBlockRewardsPoolFunds(QueryGetBlockRewardsPoolFundsRequest) returns (QueryGetBlockRewardsPoolFundsResponse) {
		option (google.api.http).get = "/commercionetwork/vbr/funds";
	}

	rpc GetParams(QueryGetParamsRequest) returns (QueryGetParamsResponse){
		option (google.api.http).get = "/commercionetwork/vbr/params";
	}
}

message QueryGetBlockRewardsPoolFundsRequest {
}

message QueryGetBlockRewardsPoolFundsResponse {
	repeated cosmos.base.v1beta1.DecCoin funds = 1 [(gogoproto.moretags) = "yaml:\"funds\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable) = false] ;
}

message QueryGetParamsRequest {
}

message QueryGetParamsResponse{
	Params params = 1 [(gogoproto.moretags) = "yaml:\"params\"",
    (gogoproto.nullable) = false]; 
}