syntax = "proto3";
package commercionetwork.commercionetwork.commerciokyc;

// Options section
option go_package = "github.com/commercionetwork/commercionetwork/x/commerciokyc/types";

// Import section
import "commercionetwork/commerciokyc/membership.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";

// Msg defines the Msg service.
service Msg {
    option (cosmos.msg.v1.service) = true;

    rpc InviteUser(MsgInviteUser) returns (MsgInviteUserResponse);
    rpc BuyMembership(MsgBuyMembership) returns (MsgBuyMembershipResponse);
    rpc RemoveMembership(MsgRemoveMembership) returns (MsgRemoveMembershipResponse);
    rpc SetMembership(MsgSetMembership) returns (MsgSetMembershipResponse);
    
    rpc DepositIntoLiquidityPool(MsgDepositIntoLiquidityPool) returns (MsgDepositIntoLiquidityPoolResponse);
    rpc AddTsp(MsgAddTsp) returns (MsgAddTspResponse);
    rpc RemoveTsp(MsgRemoveTsp) returns (MsgRemoveTspResponse);
}

message MsgInviteUser {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name)           = "commercionetwork/MsgInviteUser";

  string recipient  = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string sender     = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}
message MsgInviteUserResponse {
  string status = 1;
}

// ==========================================
message MsgBuyMembership {
  option (cosmos.msg.v1.signer) = "tsp";
  option (amino.name)           = "commercionetwork/MsgBuyMembership";

  string membership_type  = 1;
  string buyer            = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string tsp              = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}
message MsgBuyMembershipResponse {
  string expiry_at = 1;
}

// ==========================================
message MsgDepositIntoLiquidityPool {
  option (cosmos.msg.v1.signer) = "depositor";
  option (amino.name)           = "commercionetwork/MsgDepositIntoLiquidityPool";

  string depositor = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated cosmos.base.v1beta1.Coin amount = 2 [
    (gogoproto.nullable) = false,
    (amino.encoding)         = "legacy_coins", 
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MsgDepositIntoLiquidityPoolResponse {
  repeated cosmos.base.v1beta1.Coin amount_pool = 1 [
    (gogoproto.nullable) = false,
    (amino.encoding)         = "legacy_coins", 
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// ==========================================
message MsgAddTsp {
  option (cosmos.msg.v1.signer) = "government";
  option (amino.name)           = "commercionetwork/MsgAddTsp";

  string tsp        = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string government = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}
message MsgAddTspResponse {
  string tsp = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// ==========================================
message MsgRemoveTsp {
  option (cosmos.msg.v1.signer) = "government";
  option (amino.name)           = "commercionetwork/MsgRemoveTsp";

  string tsp        = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string government = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}
message MsgRemoveTspResponse {
  string tsp = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// ==========================================
message MsgRemoveMembership {
  option (cosmos.msg.v1.signer) = "government";
  option (amino.name)           = "commercionetwork/MsgRemoveMembership";
  
  string government = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string subscriber = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}
message MsgRemoveMembershipResponse {
  string subscriber = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// ==========================================
message MsgSetMembership {
  option (cosmos.msg.v1.signer) = "government";
  option (amino.name)           = "commercionetwork/MsgSetMembership";

  string government = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string subscriber = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string new_membership = 3;
}
message MsgSetMembershipResponse {
  string expiry_at = 1;
}
