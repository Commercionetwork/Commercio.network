syntax = "proto3";
package commercionetwork.commercionetwork.did;

// Options section
option go_package = "github.com/commercionetwork/commercionetwork/x/did/types";

// Import section
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "commercionetwork/did/identity.proto";
import "cosmos/query/v1/query.proto";

// Query defines the gRPC querier service.
service Query {
  // Queries a DidDocument by id.
  rpc Identity(QueryResolveIdentityRequest) returns (QueryResolveIdentityResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/commercionetwork/did/{ID}/identities";
  }

  rpc IdentityHistory(QueryResolveIdentityHistoryRequest) returns (QueryResolveIdentityHistoryResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get =
        "/commercionetwork/did/{ID}/identities/history";
  }

}

message QueryResolveIdentityRequest { string ID = 1; }

message QueryResolveIdentityResponse { Identity identity = 1; }

message QueryResolveIdentityHistoryRequest { string ID = 1; }

message QueryResolveIdentityHistoryResponse {
  repeated Identity identities = 1;
}

